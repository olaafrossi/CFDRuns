/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
//Defaut Hi Res

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    default cellLimited Gauss linear 1.0;
    grad(U) Gauss linear;
    grad(p) cellLimited Gauss linear 1.0;

    //from simscale Ahmed case
    //default Gauss linear;
    //grad(p) Gauss linear;
    //grad(U) Gauss linear;
}

divSchemes //foamSearch -c $FOAM_TUTORIALS "divScemes.div(phi,k)" fvScheme
{
    default Gauss linear;
    div(phi,U) bounded Gauss upwind;
    div(phi,omega) bounded Gauss upwind;
    div((nuEff*dev(T(grad(U))))) Gauss linear;
    div(phi,k) bounded Gauss upwind;

    //from simscale Ahmed case
    //default Gauss linear;
    //div(phi,U) Gauss linearUpwindV grad(U);
    //div(phi,k) Gauss linear;
    //div((nuEff*dev(T(grad(U))))) Gauss linear;
    //div(phi,omega) Gauss linear;

    //From early experiments
    //default         none;
    //div(phi,U)      bounded Gauss upwind; //wolf uses bounded Gauss linearUpwind Grad(U));
    //div(phi,k)      bounded Gauss upwind;
    //div(phi,omega)  bounded Gauss upwind;
    //div((nuEff*dev2(T(grad(U))))) Gauss linear; //same as wolf
}

laplacianSchemes
{
    default Gauss linear limited corrected 1.0;
    laplacian(nuEff,U) Gauss linear limited corrected 1.0;
    laplacian((1|A(U)),p) Gauss linear limited corrected 1.0;
    laplacian(nu,U) Gauss linear limited corrected 1.0;
    laplacian(1,p) Gauss linear corrected;

    //from Simscale Ahmed Case
    //default Gauss linear corrected;
    //laplacian(nuEff,U) Gauss linear corrected;
    //laplacian((1|A(U)),p) Gauss linear corrected;
    //laplacian(nu,U) Gauss linear corrected;

}

interpolationSchemes
{
    default linear;
    interpolate(HbyA) linear;
    interpolate(U) linear;
}

snGradSchemes
{
    default         corrected;
}

wallDist
{
    method meshWave;
}

fluxRequired 
{
    default no;
    p ;
}
