/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       false;

geometry
{
    Wheel.stl
    {
        type triSurfaceMesh;
        name racecar;

        regions
        {
            Tire
            {
                name tire_wall;
            }
            Rim
            {
                name rim_wall;
            }
        }
    }

    RadTest.stl
    {
        type triSurfaceMesh;
        name radd;

        regions
        {
            Plane
            {
                name plane_wall;
            }
            Rad
            {
                name rad_wall;
            }
        }
    }

    Plug.stl
    {
        type triSurfaceMesh;
        name rotatingZone;
    }

    LevelsrefinementBox
    {
        type searchableBox;
        min (-1.0 0.0 -1.0);
        max ( 1.0 1.0 1.0);
    }

    heatExchanger
    {
        type searchableBox;
        min (-1.22 0.00 1.02);
        max (-0.98 0.48 1.08);
    }
}
// Settings for the castellatedMesh generation.
castellatedMeshControls
{
    // Refinement parameters
    // ~~~~~~~~~~~~~~~~~~~~~
    maxLocalCells  2500000;
    maxGlobalCells 10000000;
    minRefinementCells 10;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 1;
    // Explicit feature edge refinement
    // Specifies a level for any cell intersected by its edges.
    features
    (
        {
            file "Wheel.eMesh";
            level 6;
        }

        {
            file "RadTest.eMesh";
            level 6;
        }

        //{
          //  file "Plug.eMesh";
           // level 6;
       // }
    );
     refinementSurfaces
    {
        racecar
        {
            level (2 3); //this is the global refinement of the STL geo
            regions
            {
                tire_wall
                {
                    level (5 6);
                    patchInfo
                    {
                        type wall;
                        //inGroups (carGroup);
                    }                                 
                }
                rim_wall
                {
                    level (5 6);
                    patchInfo
                    {
                        type wall;
                        //inGroups (carGroup);
                    }                                 
                }                                 
            }
        }

        radd
        {
            level (2 3); //this is the global refinement of the STL geo
            regions
            {
                plane_wall
                {
                    level (5 6);
                    patchInfo
                    {
                        type wall;
                        //inGroups (carGroup);
                    }                                 
                }
                rad_wall
                {
                    level (7 7); 
                    patchInfo
                    {
                        type wall;
                        //inGroups (carGroup);
                    }                                 
                }   
            }
        }

        heatExchanger
        {
            level (7 7);
            cellZone heatExchanger;
            faceZone heatExchangerf;
        }
        
        rotatingZone
        {
            level       (8 8);
            faceZone    rotatingZone;
            cellZone    rotatingZone;
            cellZoneInside  inside;                             
        }  
    }                            
    // Resolve sharp angles
    resolveFeatureAngle 10;
    // Region-wise refinement
refinementRegions
    {
        LevelsrefinementBox
        {
            mode inside;
            levels ((1E15 2));
        }

        racecar
        {
            mode distance;
            levels ((.25 4) (.5 3) (.75 2)); // levels must be ordered nearest first
        }    

        radd
        {
            mode distance;
            levels ((.25 4) (.5 3) (.75 2)); // levels must be ordered nearest first
        }  

        rotatingZone
        {
            mode inside;
            levels ((1E15 4));
        }   
    }
/////////////////////////////////////////////////////////////////////////////////////////////////////
    // Mesh selection
    // ~~~~~~~~~~~~~~
    locationInMesh (1.9001 1.9001 0.43);
    allowFreeStandingZoneFaces true;
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 3;
    tolerance 2.0;
    nSolveIter 30; // 30 is stock 300 from wolf dynamics
    nRelaxIter 5;
    nFeatureSnapIter 20; //10 is stock 20 from wolf
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap false;
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;
    nSurfaceLayers 1;
    expansionRatio 1.2;
    finalLayerThickness 0.7;
    //firstLayerThickness 0.1;
    //thickness 0.6;
    minThickness 0.1;
    // Per final patch (so not geometry!) the layer information
    layers
    {
        lowerWall
        {
            nSurfaceLayers 3;
            expansionRatio 1.3;
            finalLayerThickness 0.3;
            minThickness 0.001;
        }
    }
    nGrow 0;
    featureAngle 330; //180 is stock 330 from wolf
    slipFeatureAngle 75; //75 stock 30 from wolf
    nRelaxIter 10; //8 is stock 10 from wolf
    nSmoothSurfaceNormals 1;
    nSmoothNormals 10; //5 is stock, 10 from wolf
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3; //.35 stock .3 from wolf
    minMedianAxisAngle 130; //90 is stock
    minMedialAxisAngle 130; //90 is stock
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
}

meshQualityControls
{
    #include "meshQualityDict"
}

// Advanced

// Write flags
writeFlags
(
    scalarLevels
    layerSets
    layerFields     // write volScalarField for layer coverage
);

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;


// ************************************************************************* //
