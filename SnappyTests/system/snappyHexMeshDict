/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh false;
snap            false;
addLayers       true;

geometry
{
    Brick.stl
    {
        type triSurfaceMesh;
        name Brick_wall;
    }

    Splitter.stl
    {
        type triSurfaceMesh;
        name Splitter_wall;
    }
}
// Settings for the castellatedMesh generation.
castellatedMeshControls
{
    // Refinement parameters
    // ~~~~~~~~~~~~~~~~~~~~~
    maxLocalCells  1500000;
    maxGlobalCells 30000000;
    minRefinementCells 5; //stock is 10
    maxLoadUnbalance 0.05; //stock is .10
    nCellsBetweenLevels 1; //stock is 3
    // Explicit feature edge refinement
    // Specifies a level for any cell intersected by its edges.
    features
    (
        {
            file "Brick.eMesh";
            level 9;
        }

        {
            file "Splitter.eMesh";
            level 9;
        }
    );
     refinementSurfaces

/*cellsize calc:
1 meter block

refine level 1= .5m
refine level 2= .25m
refine level 3= .125m
refine level 4= .0625m
refine level 5= .03125m
refine level 6= .015625m
refine level 7= .0078125m
refine level 8= .00390625m
refine level 9= .001953125m
refine level 10= .0009765625m

*/

    {
        Brick_wall
        {
            level (9 9); //this is the global refinement of the STL geo
            patchInfo
            {
                type wall;
                inGroups (carGroup);
            }                                 
        }

        Splitter_wall
        {
            level (9 9); //this is the global refinement of the STL geo
            patchInfo
            {
                type wall;
                inGroups (carGroup);
            }                                 
        } 
  
    }                            
    // Resolve sharp angles
    resolveFeatureAngle 1; //30 is stock, lets try 1
    // Region-wise refinement
refinementRegions
    {
          
    }
/////////////////////////////////////////////////////////////////////////////////////////////////////
    // Mesh selection
    // ~~~~~~~~~~~~~~
    locationInMesh (1.9001 1.9001 0.43);
    allowFreeStandingZoneFaces true;
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 5; //3 is stock, 5 reccomended from Simscale
    tolerance 5.0; //2.0 is stock, 5 reccomended from Simscale
    nSolveIter 300; // 30 is stock 300 from wolf dynamics
    nRelaxIter 12; //simscale says 5-8
    nFeatureSnapIter 20; //10 is stock 20 from wolf
    implicitFeatureSnap false;
    explicitFeatureSnap true; //this will snap to the surface feature extract- 20% faster and give much better meshcheck results
    multiRegionFeatureSnap false; //stock is false/ adds 10% time creates a shit mess when connecting STLs
}

addLayersControls
{
    relativeSizes true;
    nSurfaceLayers 1;
    expansionRatio 1.2;
    finalLayerThickness 0.3;
    //firstLayerThickness 0.001;
    //thickness 0.6;
    minThickness 0.001;
    
    // Per final patch (so not geometry!) the layer information
    //https://en.wikipedia.org/wiki/Law_of_the_wall
    layers
    {
        "(carGroup).*"
        {
            nSurfaceLayers 1;
            //expansionRatio 1.3;
            //finalLayerThickness 0.3;
            //minThickness 0.001;
        }
    }
    nGrow 0;
    featureAngle 180; //180 is stock 130 from wolf try 1 from intel
    slipFeatureAngle 75; //75 stock 30 from wolf
    nRelaxIter 10; //8 is stock 10 from wolf
    nSmoothSurfaceNormals 5; //1 is stock
    nSmoothNormals 10; //5 is stock, 10 from wolf
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 1.0; //.35 stock .3 from wolf //1 from intel
    minMedianAxisAngle 90; //90 is stock
    minMedialAxisAngle 90; //90 is stock
    nBufferCellsNoExtrude 0;
    nLayerIter 50; //50 is stock //90 wolf
}

meshQualityControls
{
    #include "meshQualityDict"
}

// Advanced

// Write flags
writeFlags
(
    scalarLevels
    layerSets
    layerFields     // write volScalarField for layer coverage
);

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;


// ************************************************************************* //
